<?xml version="1.0" encoding="UTF-8"?>
<Container>
  <TemplateURL>https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/rtorrentvpn.xml</TemplateURL>
  <Name>binhex-rtorrentvpn</Name>
  <Overview>
    rTorrent is a quick and efficient BitTorrent client that uses, and is in development alongside, the libTorrent (not to be confused with libtorrent-rasterbar) library. It is written in C++ and uses the ncurses programming library, which means it uses a text user interface. When combined with a terminal multiplexer (e.g. GNU Screen or Tmux) and Secure Shell, it becomes a convenient remote BitTorrent client, this Docker image includes the popular ruTorrent web frontend to rTorrent for ease of use.
    This Docker includes OpenVPN and WireGuard to ensure a secure and private connection to the Internet, including use of iptables to prevent IP leakage when the tunnel is down. It also includes Privoxy to allow unfiltered access to index sites, to use Privoxy please point your application at "http://host ip:8118".
  </Overview>
  <Support>http://lime-technology.com/forum/index.php?topic=47832.0</Support>
  <Registry>https://registry.hub.docker.com/r/binhex/arch-rtorrentvpn/</Registry>
  <GitHub>https://github.com/binhex/arch-rtorrentvpn</GitHub>
  <Repository>binhex/arch-rtorrentvpn</Repository>
  <Project>https://github.com/rakshasa/rtorrent</Project>
  <BindTime>true</BindTime>
  <Privileged>true</Privileged>
  <Networking>
    <Mode>bridge</Mode>
    <Publish>
      <Port>
        <HostPort>5000</HostPort>
        <ContainerPort>5000</ContainerPort>
        <Protocol>tcp</Protocol>
      </Port>
      <Port>
        <HostPort>9080</HostPort>
        <ContainerPort>9080</ContainerPort>
        <Protocol>tcp</Protocol>
      </Port>
      <Port>
        <HostPort>9443</HostPort>
        <ContainerPort>9443</ContainerPort>
        <Protocol>tcp</Protocol>
      </Port>
      <Port>
        <HostPort>8118</HostPort>
        <ContainerPort>8118</ContainerPort>
        <Protocol>tcp</Protocol>
      </Port>
    </Publish>
  </Networking>
  <Environment>
    <Variable>
      <Name>VPN_ENABLED</Name>
      <Value>yes</Value>
    </Variable>
    <Variable>
      <Name>VPN_USER</Name>
      <Value>vpn username</Value>
    </Variable>
    <Variable>
      <Name>VPN_PASS</Name>
      <Value>vpn password</Value>
    </Variable>
    <Variable>
      <Name>VPN_PROV</Name>
      <Value>pia|airvpn|custom</Value>
    </Variable>
    <Variable>
      <Name>VPN_CLIENT</Name>
      <Value>openvpn|wireguard</Value>
    </Variable>
    <Variable>
      <Name>VPN_OPTIONS</Name>
      <Value></Value>
    </Variable>
    <Variable>
      <Name>STRICT_PORT_FORWARD</Name>
      <Value>yes</Value>
    </Variable>
    <Variable>
      <Name>ENABLE_PRIVOXY</Name>
      <Value>no</Value>
    </Variable>
    <Variable>
      <Name>ENABLE_AUTODL_IRSSI</Name>
      <Value>no</Value>
    </Variable>
    <Variable>
      <Name>ENABLE_RPC2</Name>
      <Value>yes</Value>
    </Variable>
    <Variable>
      <Name>ENABLE_RPC2_AUTH</Name>
      <Value>yes</Value>
    </Variable>
    <Variable>
      <Name>ENABLE_WEBUI_AUTH</Name>
      <Value>yes</Value>
    </Variable>
    <Variable>
      <Name>RPC2_USER</Name>
      <Value>admin</Value>
    </Variable>
    <Variable>
      <Name>RPC2_PASS</Name>
      <Value></Value>
    </Variable>
    <Variable>
      <Name>WEBUI_USER</Name>
      <Value>admin</Value>
    </Variable>
    <Variable>
      <Name>WEBUI_PASS</Name>
      <Value></Value>
    </Variable>
    <Variable>
      <Name>LAN_NETWORK</Name>
      <Value>192.168.1.0/24</Value>
    </Variable>
    <Variable>
      <Name>NAME_SERVERS</Name>
      <Value>209.222.18.222,84.200.69.80,37.235.1.174,1.1.1.1,209.222.18.218,37.235.1.177,84.200.70.40,1.0.0.1</Value>
    </Variable>
    <Variable>
      <Name>ADDITIONAL_PORTS</Name>
      <Value></Value>
    </Variable>
    <Variable>
      <Name>DEBUG</Name>
      <Value>false</Value>
    </Variable>
    <Variable>
      <Name>PHP_TZ</Name>
      <Value>UTC</Value>
    </Variable>
    <Variable>
      <Name>UMASK</Name>
      <Value>000</Value>
    </Variable>
    <Variable>
      <Name>PUID</Name>
      <Value>99</Value>
    </Variable>
    <Variable>
      <Name>PGID</Name>
      <Value>100</Value>
    </Variable>
  </Environment>
  <Data>
    <Volume>
      <HostDir>/mnt/cache/appdata/config</HostDir>
      <ContainerDir>/config</ContainerDir>
      <Mode>rw</Mode>
    </Volume>
    <Volume>
      <HostDir>/mnt/user/appdata/data</HostDir>
      <ContainerDir>/data</ContainerDir>
      <Mode>rw</Mode>
    </Volume>
  </Data>
  <WebUI>http://[IP]:[PORT:9080]/</WebUI>
  <Icon>https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/rtorrent-icon.png</Icon>
  <DonateText>If you appreciate my work, then please consider buying me a beer :D</DonateText>
  <DonateLink>https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;hosted_button_id=MM5E27UX6AUU4</DonateLink>
  <DonateImg>https://www.paypal.com/en_US/i/btn/btn_donate_SM.gif</DonateImg>
  <ExtraParams>--sysctl="net.ipv4.conf.all.src_valid_mark=1"</ExtraParams>
  <Category>Downloaders:</Category>
  <Description>rTorrent is a quick and efficient BitTorrent client that uses, and is in development alongside, the libTorrent (not to be confused with libtorrent-rasterbar) library. It is written in C++ and uses the ncurses programming library, which means it uses a text user interface. When combined with a terminal multiplexer (e.g. GNU Screen or Tmux) and Secure Shell, it becomes a convenient remote BitTorrent client, this Docker image includes the popular ruTorrent web frontend to rTorrent for ease of use.
    This Docker includes OpenVPN and WireGuard to ensure a secure and private connection to the Internet, including use of iptables to prevent IP leakage when the tunnel is down. It also includes Privoxy to allow unfiltered access to index sites, to use Privoxy please point your application at "http://host ip:8118".</Description>
  <templatePath>/tmp/GitHub/AppFeed/templates/BinhexsRepository/binhex/rtorrentvpn.xml</templatePath>
</Container>
