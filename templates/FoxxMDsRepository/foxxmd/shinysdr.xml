<?xml version="1.0" encoding="UTF-8"?>
<Container version="2">
  <Name>shinysdr</Name>
  <Repository>jeffersonjhunt/shinysdr</Repository>
  <Registry>https://hub.docker.com/r/jeffersonjhunt/shinysdr</Registry>
  <Network>bridge</Network>
  <Shell>bash</Shell>
  <Privileged>false</Privileged>
  <Support>https://forums.unraid.net/topic/79311-support-foxxmd-shinysdr/</Support>
  <Project>https://github.com/kpreid/shinysdr</Project>
  <Overview>Software-defined radio receiver application built on GNU Radio with a web-based UI and plugins.[br][br]&#13;
        This docker includes additional plugins courtesy of the maintainer:[br]&#13;
        * python-libhamlib2 -- Controlling external hardware radios[br]&#13;
        * gr-air-modes -- ADS-B, aircraft transponders[br][br]&#13;
        [span style='color: #E80000;']A config file -- [b]config.py[/b] -- in the Config path host directory is necessary in order to run this container![/span] Create one using the instructions below or bring your own ;)[br][br]&#13;
        [b]Creating New Config File:[/b][br]&#13;
        1. Switch to [b]Advanced View[/b] in the template and add the following to [b]Post Arguments[/b][br]&#13;
        [span style='font-family: monospace;']--init start /config/myConfig[/span][br]&#13;
        2. Make sure you have the [b]Config[/b] path mapped in your template[br]&#13;
        3. [b]Apply[/b] changes and start the container[br]&#13;
        4. Edit the container[br]&#13;
         4a. Remove the contents of [b]Post Arguments[/b][br]&#13;
         4b. Set [b]Config[/b] mapping to the subfolder created in Step 1[br]&#13;
        5. Apply changes[br]&#13;
        [b]Note:[/b] You MUST remove the Post Arguments command on next start or the container will stop on error b/c it will not overwrite an existing config file.[br][br]&#13;
        The URL for the container is suffixed with the value of [b]root_cap[/b] from [b]config.py[/b][br]&#13;
        EX [span style='font-family: monospace;']http://yourIP:port/rootCapValue[/span][br]&#13;
        To access the container at the URL without the suffix set [span style='font-family: monospace;']root_cap=None[/span] in [b]config.py[/b]
    </Overview>
  <Date>1554955200</Date>
  <WebUI>http://[IP]:[PORT:8100]/</WebUI>
  <TemplateURL>https://raw.githubusercontent.com/FoxxMD/unraid-docker-templates/master/foxxmd/shinysdr.xml</TemplateURL>
  <Icon>https://raw.githubusercontent.com/FoxxMD/unraid-docker-templates/master/icons/shinysdr.png</Icon>
  <PostArgs></PostArgs>
  <CPUset></CPUset>
  <Networking>
    <Mode>bridge</Mode>
    <Publish>
      <Port>
        <HostPort>8100</HostPort>
        <ContainerPort>8100</ContainerPort>
        <Protocol>tcp</Protocol>
      </Port>
      <Port>
        <HostPort>8101</HostPort>
        <ContainerPort>8101</ContainerPort>
        <Protocol>tcp</Protocol>
      </Port>
    </Publish>
  </Networking>
  <Data>
    <Volume>
      <HostDir>/mnt/user/appdata/shinysdr/config/</HostDir>
      <ContainerDir>/config</ContainerDir>
      <Mode>rw</Mode>
    </Volume>
  </Data>
  <Environment></Environment>
  <Config Name="HTTP" Target="8100" Default="" Mode="tcp" Description="Container Port: 8100" Type="Port" Display="always" Required="true" Mask="false">8100</Config>
  <Config Name="WebSockets" Target="8101" Default="" Mode="tcp" Description="Container Port: 8101" Type="Port" Display="always" Required="true" Mask="false">8101</Config>
  <Config Name="Radio Device" Target="" Default="" Mode="" Description="(Optional) Host device to pass through" Type="Device" Display="always" Required="false" Mask="false"></Config>
  <Config Name="Config" Target="/config" Default="" Mode="rw" Description="Container Path: /config" Type="Path" Display="always" Required="true" Mask="false">/mnt/user/appdata/shinysdr/config/</Config>
  <Category>MediaApp:Music MediaApp:Other</Category>
  <Description>Software-defined radio receiver application built on GNU Radio with a web-based UI and plugins.&#13;
        This docker includes additional plugins courtesy of the maintainer:&#13;
        * python-libhamlib2 -- Controlling external hardware radios&#13;
        * gr-air-modes -- ADS-B, aircraft transponders</Description>
  <templatePath>/tmp/GitHub/AppFeed/templates/FoxxMDsRepository/foxxmd/shinysdr.xml</templatePath>
</Container>
