<?xml version="1.0" encoding="UTF-8"?>
<Container version="2">
  <Name>frigate</Name>
  <Repository>blakeblackshear/frigate:stable-amd64</Repository>
  <Registry>https://hub.docker.com/r/blakeblackshear/frigate/</Registry>
  <Network>bridge</Network>
  <Shell>sh</Shell>
  <Privileged>true</Privileged>
  <Support>https://forums.unraid.net/topic/98064-support-blakeblackshear-frigate/</Support>
  <Project>https://github.com/blakeblackshear/frigate</Project>
  <Overview>[b]NVR With Realtime Object Detection for IP Cameras[/b]&#13;
&#13;
Uses OpenCV and Tensorflow to perform realtime object detection locally for IP cameras. Designed for integration with HomeAssistant or others via MQTT.&#13;
&#13;
Use of a Google Coral Accelerator is optional, but highly recommended. On my Intel i7 processor, I can process 2-3 FPS with the CPU. The Coral can process 100+ FPS with very low CPU load.&#13;
&#13;
    *Leverages multiprocessing heavily with an emphasis on realtime over processing every frame&#13;
    *Uses a very low overhead motion detection to determine where to run object detection&#13;
    *Object detection with Tensorflow runs in a separate process&#13;
    *Object info is published over MQTT for integration into HomeAssistant as a binary sensor&#13;
    *An endpoint is available to view an MJPEG stream for debugging, but should not be used continuously&#13;
&#13;
[span style='color: red;'][b]Note:[/b][/span] A config.yml file [b]must exist[/b] in the config directory. See example [a href="https://github.com/blakeblackshear/frigate/blob/master/config/config.example.yml"]here[/a] and device specific info can be found [a href="https://github.com/blakeblackshear/frigate/blob/master/docs/DEVICES.md"]here[/a]. See the documentation for more details.&#13;
&#13;
[span style='color: red;'][b]Note:[/b][/span] If you are using a PCI Coral instead of a USB one, install first the needed drivers going to the CA APP and searching for [b]Coral-Driver[/b] (currently available only for Unraid 6.9.0.rc2) (thanks to ich777)&#13;
</Overview>
  <WebUI>http://[IP]:[PORT:5000]</WebUI>
  <TemplateURL>https://raw.githubusercontent.com/yayitazale/unraid-templates/main/yayitazale/frigate-amd64.xml</TemplateURL>
  <Icon>https://raw.githubusercontent.com/yayitazale/unraid-templates/main/frigate_unraid.PNG</Icon>
  <ExtraParams>--shm-size=512m</ExtraParams>
  <PostArgs></PostArgs>
  <CPUset></CPUset>
  <Networking>
    <Mode>bridge</Mode>
    <Publish>
      <Port>
        <HostPort>5000</HostPort>
        <ContainerPort>5000</ContainerPort>
        <Protocol>tcp</Protocol>
      </Port>
      <Port>
        <HostPort>1935</HostPort>
        <ContainerPort>1935</ContainerPort>
        <Protocol>tcp</Protocol>
      </Port>
    </Publish>
  </Networking>
  <Data>
    <Volume>
      <HostDir>/mnt/user/appdata/frigate</HostDir>
      <ContainerDir>/config</ContainerDir>
      <Mode>rw</Mode>
    </Volume>
    <Volume>
      <HostDir>/mnt/user/Media/frigate/clips</HostDir>
      <ContainerDir>/media/frigate/clips</ContainerDir>
      <Mode>rw</Mode>
    </Volume>
    <Volume>
      <HostDir>/mnt/user/Media/frigate/recordings</HostDir>
      <ContainerDir>/media/frigate/recordings</ContainerDir>
      <Mode>rw</Mode>
    </Volume>
    <Volume>
      <HostDir>/etc/localtime</HostDir>
      <ContainerDir>/etc/localtime</ContainerDir>
      <Mode>rw</Mode>
    </Volume>
    <Volume>
      <HostDir>/cache</HostDir>
      <ContainerDir>/tmpfs</ContainerDir>
      <Mode>rw</Mode>
    </Volume>
    <Volume>
      <HostDir>/mnt/user/Media/frigate/clips</HostDir>
      <ContainerDir>/clips</ContainerDir>
      <Mode>rw</Mode>
    </Volume>
  </Data>
  <Environment>
    <Variable>
      <Value>enterpassword</Value>
      <Name>FRIGATE_RTSP_PASSWORD</Name>
      <Mode></Mode>
    </Variable>
  </Environment>
  <Config Name="Path con config" Target="/config" Default="/mnt/user/appdata/frigate" Mode="rw" Description="/mnt/user/appdata/frigate" Type="Path" Display="always" Required="true" Mask="false">/mnt/user/appdata/frigate</Config>
  <Config Name="Clips path" Target="/media/frigate/clips" Default="/mnt/user/Media/frigate/clips" Mode="rw" Description="Container Path: /media/frigate/clips" Type="Path" Display="always" Required="true" Mask="false">/mnt/user/Media/frigate/clips</Config>
  <Config Name="Recordings path" Target="/media/frigate/recordings" Default="/mnt/user/Media/frigate/recordings" Mode="rw" Description="Container Path: /media/frigate/recordings" Type="Path" Display="always" Required="true" Mask="false">/mnt/user/Media/frigate/recordings</Config>
  <Config Name="HTTP port" Target="5000" Default="" Mode="tcp" Description="5000" Type="Port" Display="always" Required="true" Mask="false">5000</Config>
  <Config Name="RSTP port" Target="1935" Default="" Mode="tcp" Description="Container Port: 1935" Type="Port" Display="always" Required="true" Mask="false">1935</Config>
  <Config Name="Localtime" Target="/etc/localtime" Default="" Mode="rw" Description="/etc/localtime" Type="Path" Display="always" Required="true" Mask="false">/etc/localtime</Config>
  <Config Name="Cache TempFS is best" Target="/tmpfs" Default="" Mode="rw" Description="Container Path: /tmpfs" Type="Path" Display="always" Required="false" Mask="false">/cache</Config>
  <Config Name="Frigate RTSP Password" Target="FRIGATE_RTSP_PASSWORD" Default="" Mode="" Description="Container Variable: FRIGATE_RTSP_PASSWORD" Type="Variable" Display="always" Required="true" Mask="false">enterpassword</Config>
  <Config Name="Recordings if enabled in config" Target="/clips" Default="/mnt/user/Media/frigate/clips" Mode="rw" Description="Container Path: /clips" Type="Path" Display="always" Required="false" Mask="false">/mnt/user/Media/frigate/clips</Config>
  <Config Name="TPU Mapping" Target="/dev/bus/usb" Default="" Mode="" Description="Container Path: /dev/bus/usb" Type="Device" Display="advanced-hide" Required="false" Mask="false">/dev/bus/usb</Config>
  <Config Name="GPU Mapping" Target="/dev/dri/" Default="" Mode="" Description="Container Path: /dev/dri/" Type="Device" Display="advanced-hide" Required="false" Mask="false">/dev/dri/</Config>
  <Config Name="GPU Mapping" Target="" Default="" Mode="" Description="Container Device: " Type="Device" Display="advanced-hide" Required="false" Mask="false">/dev/bus/usb</Config>
  <Date>1611751168</Date>
  <Description>NVR With Realtime Object Detection for IP Cameras&#13;
&#13;
Uses OpenCV and Tensorflow to perform realtime object detection locally for IP cameras. Designed for integration with HomeAssistant or others via MQTT.&#13;
&#13;
Use of a Google Coral Accelerator is optional, but highly recommended. On my Intel i7 processor, I can process 2-3 FPS with the CPU. The Coral can process 100+ FPS with very low CPU load.&#13;
&#13;
    *Leverages multiprocessing heavily with an emphasis on realtime over processing every frame&#13;
    *Uses a very low overhead motion detection to determine where to run object detection&#13;
    *Object detection with Tensorflow runs in a separate process&#13;
    *Object info is published over MQTT for integration into HomeAssistant as a binary sensor&#13;
    *An endpoint is available to view an MJPEG stream for debugging, but should not be used continuously</Description>
  <templatePath>/tmp/GitHub/AppFeed/templates/yayitazalesRepository/yayitazale/frigate-amd64.xml</templatePath>
</Container>
